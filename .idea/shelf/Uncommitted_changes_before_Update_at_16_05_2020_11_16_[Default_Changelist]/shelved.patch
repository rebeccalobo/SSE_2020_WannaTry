Index: target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>com\\SSE2020\\WannaTry\\controller\\GradesController.class\ncom\\SSE2020\\WannaTry\\exceptions\\UserNotFoundException.class\ncom\\SSE2020\\WannaTry\\service\\SessionListener.class\ncom\\SSE2020\\WannaTry\\model\\ModuleEnrolment.class\ncom\\SSE2020\\WannaTry\\controller\\RegisterController.class\ncom\\SSE2020\\WannaTry\\Example.class\ncom\\SSE2020\\WannaTry\\controller\\StudentModuleController.class\ncom\\SSE2020\\WannaTry\\exceptions\\EnrolementNotFoundException.class\ncom\\SSE2020\\WannaTry\\databaserepo\\ModuleRepository.class\ncom\\SSE2020\\WannaTry\\databaserepo\\LoginAttemptRepository.class\ncom\\SSE2020\\WannaTry\\exceptions\\ModuleNotFoundException.class\ncom\\SSE2020\\WannaTry\\service\\CustomFailedAuthentication.class\ncom\\SSE2020\\WannaTry\\controller\\HomePageController.class\ncom\\SSE2020\\WannaTry\\model\\User_Fee.class\ncom\\SSE2020\\WannaTry\\service\\CustomUserDetailsService.class\ncom\\SSE2020\\WannaTry\\exceptions\\StaffNotFoundException.class\ncom\\SSE2020\\WannaTry\\model\\Modules.class\ncom\\SSE2020\\WannaTry\\controller\\StudentGradesController.class\ncom\\SSE2020\\WannaTry\\controller\\LoginController.class\ncom\\SSE2020\\WannaTry\\databaserepo\\GradesRepository.class\ncom\\SSE2020\\WannaTry\\service\\IDGenerator.class\ncom\\SSE2020\\WannaTry\\service\\BackendRepoService.class\ncom\\SSE2020\\WannaTry\\databaserepo\\PrivilegeRepository.class\ncom\\SSE2020\\WannaTry\\service\\ValidateRegistrationService.class\ncom\\SSE2020\\WannaTry\\exceptions\\StudentGradesNotFoundException.class\ncom\\SSE2020\\WannaTry\\model\\Grades.class\ncom\\SSE2020\\WannaTry\\controller\\StaffController.class\ncom\\SSE2020\\WannaTry\\service\\SetUpDataLoader.class\ncom\\SSE2020\\WannaTry\\model\\User.class\ncom\\SSE2020\\WannaTry\\controller\\DashboardController.class\ncom\\SSE2020\\WannaTry\\controller\\ModuleController.class\ncom\\SSE2020\\WannaTry\\databaserepo\\UserRepository.class\ncom\\SSE2020\\WannaTry\\controller\\LogoutController.class\ncom\\SSE2020\\WannaTry\\service\\Configuration.class\ncom\\SSE2020\\WannaTry\\model\\Role.class\ncom\\SSE2020\\WannaTry\\service\\MyAuthenticationRequest.class\ncom\\SSE2020\\WannaTry\\model\\FailedAttempts.class\ncom\\SSE2020\\WannaTry\\databaserepo\\RoleRepository.class\ncom\\SSE2020\\WannaTry\\service\\SecurityConfiguration.class\ncom\\SSE2020\\WannaTry\\controller\\PaymentsController.class\ncom\\SSE2020\\WannaTry\\exceptions\\BlockedIPException.class\ncom\\SSE2020\\WannaTry\\model\\IP_Blacklist.class\ncom\\SSE2020\\WannaTry\\databaserepo\\BlacklistRepository.class\ncom\\SSE2020\\WannaTry\\databaserepo\\ModuleEnrolmentsRepository.class\ncom\\SSE2020\\WannaTry\\model\\CustomUserDetails.class\ncom\\SSE2020\\WannaTry\\model\\Privilege.class\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst	(revision 2cbb5b41a2967221fbc456dd0dcb761fab4053b0)
+++ target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst	(date 1589591291777)
@@ -1,46 +1,49 @@
 com\SSE2020\WannaTry\controller\GradesController.class
-com\SSE2020\WannaTry\exceptions\UserNotFoundException.class
-com\SSE2020\WannaTry\service\SessionListener.class
-com\SSE2020\WannaTry\model\ModuleEnrolment.class
 com\SSE2020\WannaTry\controller\RegisterController.class
 com\SSE2020\WannaTry\Example.class
 com\SSE2020\WannaTry\controller\StudentModuleController.class
 com\SSE2020\WannaTry\exceptions\EnrolementNotFoundException.class
-com\SSE2020\WannaTry\databaserepo\ModuleRepository.class
 com\SSE2020\WannaTry\databaserepo\LoginAttemptRepository.class
-com\SSE2020\WannaTry\exceptions\ModuleNotFoundException.class
+com\SSE2020\WannaTry\model\Logged_Actions.class
 com\SSE2020\WannaTry\service\CustomFailedAuthentication.class
 com\SSE2020\WannaTry\controller\HomePageController.class
+com\SSE2020\WannaTry\exceptions\StaffNotFoundException.class
+com\SSE2020\WannaTry\controller\LoginController.class
+com\SSE2020\WannaTry\databaserepo\GradesRepository.class
+com\SSE2020\WannaTry\service\SetUpDataLoader.class
+com\SSE2020\WannaTry\model\User.class
+com\SSE2020\WannaTry\controller\DashboardController.class
+com\SSE2020\WannaTry\databaserepo\UserRepository.class
+com\SSE2020\WannaTry\model\Role.class
+com\SSE2020\WannaTry\databaserepo\RoleRepository.class
+com\SSE2020\WannaTry\service\SecurityConfiguration.class
+com\SSE2020\WannaTry\exceptions\BlockedIPException.class
+com\SSE2020\WannaTry\model\CustomUserDetails.class
+com\SSE2020\WannaTry\exceptions\UserNotFoundException.class
+com\SSE2020\WannaTry\service\SessionListener.class
+com\SSE2020\WannaTry\model\ModuleEnrolment.class
+com\SSE2020\WannaTry\databaserepo\ModuleRepository.class
+com\SSE2020\WannaTry\exceptions\ModuleNotFoundException.class
 com\SSE2020\WannaTry\model\User_Fee.class
 com\SSE2020\WannaTry\service\CustomUserDetailsService.class
-com\SSE2020\WannaTry\exceptions\StaffNotFoundException.class
 com\SSE2020\WannaTry\model\Modules.class
 com\SSE2020\WannaTry\controller\StudentGradesController.class
-com\SSE2020\WannaTry\controller\LoginController.class
-com\SSE2020\WannaTry\databaserepo\GradesRepository.class
 com\SSE2020\WannaTry\service\IDGenerator.class
 com\SSE2020\WannaTry\service\BackendRepoService.class
 com\SSE2020\WannaTry\databaserepo\PrivilegeRepository.class
-com\SSE2020\WannaTry\service\ValidateRegistrationService.class
 com\SSE2020\WannaTry\exceptions\StudentGradesNotFoundException.class
 com\SSE2020\WannaTry\model\Grades.class
 com\SSE2020\WannaTry\controller\StaffController.class
-com\SSE2020\WannaTry\service\SetUpDataLoader.class
-com\SSE2020\WannaTry\model\User.class
-com\SSE2020\WannaTry\controller\DashboardController.class
+com\SSE2020\WannaTry\service\ExceptionHandlers.class
+com\SSE2020\WannaTry\service\ValidateService.class
 com\SSE2020\WannaTry\controller\ModuleController.class
-com\SSE2020\WannaTry\databaserepo\UserRepository.class
 com\SSE2020\WannaTry\controller\LogoutController.class
 com\SSE2020\WannaTry\service\Configuration.class
-com\SSE2020\WannaTry\model\Role.class
 com\SSE2020\WannaTry\service\MyAuthenticationRequest.class
 com\SSE2020\WannaTry\model\FailedAttempts.class
-com\SSE2020\WannaTry\databaserepo\RoleRepository.class
-com\SSE2020\WannaTry\service\SecurityConfiguration.class
+com\SSE2020\WannaTry\databaserepo\LoggedActionsRepository.class
 com\SSE2020\WannaTry\controller\PaymentsController.class
-com\SSE2020\WannaTry\exceptions\BlockedIPException.class
 com\SSE2020\WannaTry\model\IP_Blacklist.class
 com\SSE2020\WannaTry\databaserepo\BlacklistRepository.class
 com\SSE2020\WannaTry\databaserepo\ModuleEnrolmentsRepository.class
-com\SSE2020\WannaTry\model\CustomUserDetails.class
 com\SSE2020\WannaTry\model\Privilege.class
Index: src/main/java/com/SSE2020/WannaTry/controller/HomePageController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.SSE2020.WannaTry.controller;\n\n\nimport com.SSE2020.WannaTry.exceptions.UserNotFoundException;\nimport com.SSE2020.WannaTry.model.CustomUserDetails;\nimport com.SSE2020.WannaTry.model.Role;\nimport com.SSE2020.WannaTry.model.User;\nimport com.SSE2020.WannaTry.service.BackendRepoService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.security.authentication.InternalAuthenticationServiceException;\nimport org.springframework.security.core.context.SecurityContextHolder;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.ExceptionHandler;\nimport org.springframework.web.bind.annotation.GetMapping;\n\nimport java.util.NoSuchElementException;\n\n\n@Controller\npublic class HomePageController {\n    @Autowired\n    BackendRepoService repoService;\n    @GetMapping(value={ \"/\",\"/Home\"})\n    public String homePage(Model model){\n        Object context = SecurityContextHolder.getContext().getAuthentication().getPrincipal();\n        if(context instanceof CustomUserDetails){\n            User user = ((CustomUserDetails) context).getUser();\n            for(Role r : user.getRoles()){\n                if(r.getName().equals(\"ROLE_STAFF\")){\n                    model.addAttribute(\"isStaff\",true);\n                    model.addAttribute(\"isStudent\",false);\n                    model.addAttribute(\"flag\",false);\n                }\n                else if(r.getName().equals(\"ROLE_STUDENT\")){\n                    model.addAttribute(\"isStaff\",false);\n                    model.addAttribute(\"isStudent\",true);\n                    model.addAttribute(\"flag\",false);\n                }\n            }\n        }\n        else{\n            model.addAttribute(\"isStaff\",false);\n            model.addAttribute(\"isStudent\",false);\n            model.addAttribute(\"flag\",true);\n        }\n\n\n        return \"Home\";\n    }\n    @GetMapping(value = \"/error\")\n    public String error(Model model){\n        model.addAttribute(\"flag\",true);\n        return \"redirect:/LoginFailed\";\n    }\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/SSE2020/WannaTry/controller/HomePageController.java	(revision 2cbb5b41a2967221fbc456dd0dcb761fab4053b0)
+++ src/main/java/com/SSE2020/WannaTry/controller/HomePageController.java	(date 1589560951187)
@@ -14,6 +14,8 @@
 import org.springframework.web.bind.annotation.ExceptionHandler;
 import org.springframework.web.bind.annotation.GetMapping;
 
+import java.util.ArrayList;
+import java.util.HashMap;
 import java.util.NoSuchElementException;
 
 
@@ -45,6 +47,28 @@
             model.addAttribute("flag",true);
         }
 
+        ArrayList<String> allGenders = repoService.getUserRepository().genders();
+        ArrayList<String> allEth = repoService.getUserRepository().ethnicity();
+
+        HashMap<String,Integer> genders = new HashMap<>();
+        HashMap<String,Integer> ethnicities = new HashMap<>();
+
+        for(String s : allGenders){
+            if(genders.containsKey(s)){
+                genders.put(s,genders.get(s)+1);
+            }else{
+                genders.put(s,1);
+            }
+        }
+        for(String s : allEth){
+            if(ethnicities.containsKey(s)){
+                ethnicities.put(s,ethnicities.get(s)+1);
+            }else{
+                ethnicities.put(s,1);
+            }
+        }
+        model.addAttribute("genders",genders);
+        model.addAttribute("ethnicities",ethnicities);
 
         return "Home";
     }
Index: src/main/java/com/SSE2020/WannaTry/controller/LoginController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.SSE2020.WannaTry.controller;\n\nimport com.SSE2020.WannaTry.databaserepo.BlacklistRepository;\nimport com.SSE2020.WannaTry.databaserepo.LoginAttemptRepository;\nimport com.SSE2020.WannaTry.model.IP_Blacklist;\nimport com.SSE2020.WannaTry.model.FailedAttempts;\nimport com.SSE2020.WannaTry.model.User;\nimport com.SSE2020.WannaTry.service.BackendRepoService;\nimport org.springframework.security.core.context.SecurityContextHolder;\nimport org.springframework.security.crypto.password.PasswordEncoder;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\n\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpSession;\nimport javax.transaction.Transactional;\nimport java.util.Date;\nimport java.util.Optional;\n\n@Controller\npublic class LoginController {\n\n    final\n    BackendRepoService repoService;\n    final\n    LoginAttemptRepository loginAttemptRepository;\n    final\n    BlacklistRepository blacklistRepository;\n    final\n    PasswordEncoder passwordEncoder;\n\n    public LoginController(BackendRepoService repoService, LoginAttemptRepository loginAttemptRepository, BlacklistRepository blacklistRepository, PasswordEncoder passwordEncoder) {\n        this.repoService = repoService;\n        this.loginAttemptRepository = loginAttemptRepository;\n        this.blacklistRepository = blacklistRepository;\n        this.passwordEncoder = passwordEncoder;\n    }\n\n    @GetMapping(value = \"/blocked\")\n    public String routeToBlockedPage(){\n        return \"BlockedError\";\n    }\n\n    @RequestMapping(value = \"/Login\",method = RequestMethod.GET)\n    public String showLoginPage(Model model,HttpServletRequest request){\n        if (!isBlackListed(request.getRemoteAddr())) {\n            User user = new User();\n            model.addAttribute(\"flag\",true);\n            model.addAttribute(\"user\",user);\n            return \"Login\";\n        } else {\n            return \"redirect:/blocked\";\n        }\n    }\n\n    @GetMapping(value = \"/LoginSuccess\")\n    public String redirectToDashBoard(HttpSession session){\n        session.setMaxInactiveInterval(120);\n        return \"redirect:/Dashboard\";\n    }\n\n    @Transactional\n    @PostMapping(value=\"/LoginFailed\")\n    public String handleFailedLogin(HttpServletRequest request,Model model){\n        String ip = request.getRemoteAddr();\n        if(isBlackListed(ip)){\n            return \"redirect:/blocked\";\n        }\n        else{\n            Optional<FailedAttempts> optAttempt = loginAttemptRepository.findById(ip);\n            if(optAttempt.isPresent()){\n\n                FailedAttempts failedAttempts = optAttempt.get();\n                int attempts = failedAttempts.getATTEMPTS() + 1;\n                int MAX_ATTEMPTS = 5;\n                if(attempts >= MAX_ATTEMPTS){\n                    blockIP(failedAttempts.getIP_ADDRESS());\n                    SecurityContextHolder.clearContext();\n                    HttpSession session = request.getSession();\n                    session.invalidate();\n                    return \"redirect:/blocked\";\n                }\n                loginAttemptRepository.updateAttempt(ip,attempts,new Date());\n            }else{\n                Date date = new Date();\n                FailedAttempts failedAttempts = new FailedAttempts(ip,1,date);\n                loginAttemptRepository.save(failedAttempts);\n            }\n            User user = new User();\n            model.addAttribute(\"flag\",true);\n            model.addAttribute(\"user\",user);\n            model.addAttribute(\"failed_attempt\",true);\n            return \"/Login\";\n        }\n\n\n    }\n\n    private boolean isBlackListed(String IP){\n        Optional<IP_Blacklist> blacklistedIP = blacklistRepository.findById(IP);\n        return blacklistedIP.map(ip_blacklist -> ip_blacklist.getIP_ADDRESS().equals(IP)).orElse(false);\n    }\n\n    @Transactional\n    void blockIP(String IP){\n        blacklistRepository.blockIP(IP);\n        Optional<FailedAttempts> failedAttempts = loginAttemptRepository.findById(IP);\n        loginAttemptRepository.delete(failedAttempts.get());\n    }\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/SSE2020/WannaTry/controller/LoginController.java	(revision 2cbb5b41a2967221fbc456dd0dcb761fab4053b0)
+++ src/main/java/com/SSE2020/WannaTry/controller/LoginController.java	(date 1589591281173)
@@ -1,7 +1,9 @@
 package com.SSE2020.WannaTry.controller;
 
 import com.SSE2020.WannaTry.databaserepo.BlacklistRepository;
+import com.SSE2020.WannaTry.databaserepo.LoggedActionsRepository;
 import com.SSE2020.WannaTry.databaserepo.LoginAttemptRepository;
+import com.SSE2020.WannaTry.model.CustomUserDetails;
 import com.SSE2020.WannaTry.model.IP_Blacklist;
 import com.SSE2020.WannaTry.model.FailedAttempts;
 import com.SSE2020.WannaTry.model.User;
@@ -18,6 +20,7 @@
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpSession;
 import javax.transaction.Transactional;
+import java.security.Security;
 import java.util.Date;
 import java.util.Optional;
 
@@ -28,16 +31,18 @@
     BackendRepoService repoService;
     final
     LoginAttemptRepository loginAttemptRepository;
+    final LoggedActionsRepository loggedActionsRepository;
     final
     BlacklistRepository blacklistRepository;
     final
     PasswordEncoder passwordEncoder;
 
-    public LoginController(BackendRepoService repoService, LoginAttemptRepository loginAttemptRepository, BlacklistRepository blacklistRepository, PasswordEncoder passwordEncoder) {
+    public LoginController(BackendRepoService repoService, LoginAttemptRepository loginAttemptRepository, BlacklistRepository blacklistRepository, PasswordEncoder passwordEncoder,LoggedActionsRepository loggedActionsRepository) {
         this.repoService = repoService;
         this.loginAttemptRepository = loginAttemptRepository;
         this.blacklistRepository = blacklistRepository;
         this.passwordEncoder = passwordEncoder;
+        this.loggedActionsRepository = loggedActionsRepository;
     }
 
     @GetMapping(value = "/blocked")
@@ -57,9 +62,16 @@
         }
     }
 
+    @Transactional
     @GetMapping(value = "/LoginSuccess")
-    public String redirectToDashBoard(HttpSession session){
+    public String redirectToDashBoard(HttpSession session,HttpServletRequest request){
+        String ip = request.getRemoteAddr();
         session.setMaxInactiveInterval(120);
+
+        CustomUserDetails userDetails = (CustomUserDetails) SecurityContextHolder.getContext().getAuthentication().getPrincipal();
+        User user = userDetails.getUser();
+
+        loggedActionsRepository.log(user.getID(),"LOGIN","User : "+user.getFName()+" "+user.getLName() + "has logged in",ip,new Date());
         return "redirect:/Dashboard";
     }
 
Index: src/main/java/com/SSE2020/WannaTry/controller/GradesController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.SSE2020.WannaTry.controller;\n\nimport com.SSE2020.WannaTry.model.*;\nimport com.SSE2020.WannaTry.service.BackendRepoService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.data.jpa.repository.Modifying;\nimport org.springframework.security.core.context.SecurityContextHolder;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.ModelAttribute;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\nimport org.springframework.web.bind.annotation.RequestParam;\n\nimport javax.transaction.Transactional;\nimport java.sql.Date;\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.util.Optional;\n\n\n@Controller\npublic class GradesController {\n    @Autowired\n    BackendRepoService backendRepoService;\n\n    @RequestMapping(value = \"/grades\",method = RequestMethod.GET)\n    public String goToGradesPage(Model model){\n        CustomUserDetails userDetails = (CustomUserDetails) SecurityContextHolder.getContext().getAuthentication().getPrincipal();\n        User user = userDetails.getUser();\n        for(Role r : user.getRoles()){\n            if(r.getName().equals(\"ROLE_STAFF\")){\n               return isStaff(user,model);\n            }\n        }\n       return isStudent(user,model);\n        //check roles, if the user is staff goto input page -> if student display his grades\n    }\n\n\n\n        @RequestMapping(value=\"/submit_grade\",method = RequestMethod.POST)\n        public String submitGrade(Model model, @RequestParam(\"student\")int student_id,@RequestParam(\"module\")String module_id,@RequestParam(\"percentage\") double percentage){\n                Optional<Grades> optional = backendRepoService.getSmgRepo().getGradeBySandM(student_id,module_id);\n                if(optional.isPresent()){\n                    Grades newGrade = optional.get();\n\n                    newGrade.setPercentage(percentage);\n\n\n                    newGrade.setLetter_grade(getLetter(percentage));\n\n                    backendRepoService.getSmgRepo().save(newGrade);\n                }else{\n                    Grades grade = new Grades(module_id,student_id,percentage,getLetter(percentage),\"\");\n                    backendRepoService.getSmgRepo().save(grade);\n                }\n               return \"redirect:/grades\";\n    }\n\n    private String getLetter(double percentage){\n        String lG = \"\";\n\n        if(percentage>= 85.00){\n            lG = \"A\";\n        }\n        else if(percentage >= 70.00 && percentage< 85.00){\n            lG = \"B\";\n        }\n        else if(percentage >= 55.00 && percentage< 70.00){\n            lG = \"C\";\n        }\n        else if(percentage >= 40.00 && percentage< 55.00){\n            lG = \"D\";\n        }else{\n            lG=\"F\";\n        }\n        return lG;\n    }\n//    @RequestMapping(value = \"/StaffModule\")\n//    public String getTerminated(Model model){\n//        Staff current_staff = CurrentStaffSingleton.getInstance().getCurrentUser();\n//        long millis=System.currentTimeMillis();\n//        java.sql.Date date=new java.sql.Date(millis);\n//\n//        HashMap<String, ArrayList<String>> students_enroled_in_module = new HashMap<>();\n//        Staff staff = CurrentStaffSingleton.getInstance().getCurrentUser();\n//        ArrayList<Modules> modules = backendRepoService.getModuleRepo().getStaffModules(staff.getStaff_id());\n//        ArrayList<Modules> terminated = new ArrayList<>();\n//        for(Modules module : modules){\n//            if(module.getEnd_date().before(date)){\n//                terminated.add(module);\n//                students_enroled_in_module.put(module.getModule_name(),\n//                        backendRepoService.getModuleRepo().getStudentsInSpecificModuleStaff(module.getModule_id(),current_staff.getStaff_id()));\n//            }\n//        }\n//\n//        //TODO use rebeccas method of retrieving grades\n//        model.addAttribute(\"hashmap\",students_enroled_in_module);\n//        model.addAttribute(\"modules\",terminated);\n//        model.addAttribute(\"current_staff\", current_staff);\n//        return \"Grades_and_feedback_input\";\n//    }\n\n    public String isStudent(User user,Model model){\n        model.addAttribute(\"current_user\", user);\n        long millis = System.currentTimeMillis();\n        Date date = new Date(millis);\n\n        Collection<Grades> grades = backendRepoService.getSmgRepo().getStudentsGrades(user.getID(),date);\n        model.addAttribute(\"grades\",grades);\n        model.addAttribute(\"current_user\", user);\n        model.addAttribute(\"isStaff\",false);\n        model.addAttribute(\"isStudent\",true);\n        model.addAttribute(\"flag\",false);\n        return \"StudentGradesAndFeedbackPage\";\n    }\n\n\n\n\n\n\n\n\n\n\n    public String isStaff(User user,Model model){\n\n        long millis=System.currentTimeMillis();\n        java.sql.Date date=new java.sql.Date(millis);\n\n        HashMap<String, ArrayList<Integer>> students_enroled_in_module = new HashMap<>();\n\n\n        ArrayList<Modules> modules = backendRepoService.getModuleRepo().getStaffModules(user.getID());\n        ArrayList<Modules> terminated = new ArrayList<>();\n\n\n        for(Modules module : modules){\n            if(module.getEnd_date().before(date)){\n                terminated.add(module);\n                students_enroled_in_module.put(module.getModule_id(),\n                        backendRepoService.getModuleRepo().getStudentsInSpecificModuleStaff(module.getModule_id(),user.getID()));\n            }\n        }\n\n        model.addAttribute(\"hashmap\",students_enroled_in_module);\n        model.addAttribute(\"modules\",terminated);\n        model.addAttribute(\"current_staff\", user);\n        model.addAttribute(\"isStaff\",true);\n        model.addAttribute(\"isStudent\",false);\n        model.addAttribute(\"flag\",false);\n        return \"Grades_and_feedback_input\";\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/SSE2020/WannaTry/controller/GradesController.java	(revision 2cbb5b41a2967221fbc456dd0dcb761fab4053b0)
+++ src/main/java/com/SSE2020/WannaTry/controller/GradesController.java	(date 1589565871088)
@@ -42,6 +42,7 @@
 
         @RequestMapping(value="/submit_grade",method = RequestMethod.POST)
         public String submitGrade(Model model, @RequestParam("student")int student_id,@RequestParam("module")String module_id,@RequestParam("percentage") double percentage){
+                CustomUserDetails details = (CustomUserDetails) SecurityContextHolder.getContext().getAuthentication().getPrincipal();
                 Optional<Grades> optional = backendRepoService.getSmgRepo().getGradeBySandM(student_id,module_id);
                 if(optional.isPresent()){
                     Grades newGrade = optional.get();
Index: src/main/java/com/SSE2020/WannaTry/databaserepo/UserRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.SSE2020.WannaTry.databaserepo;\n\nimport com.SSE2020.WannaTry.model.User;\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.data.jpa.repository.Query;\nimport org.springframework.stereotype.Repository;\n\nimport java.util.Optional;\n\n@Repository\npublic interface UserRepository extends JpaRepository<User, Integer> {\n    @Query(value = \"Select * from wannatryschema.user where fname = ?1 and lname = ?2\",nativeQuery = true)\n    Optional<User> findByName(String f, String l);\n\n    @Query(value=\"CALL wannatryschema.random_id();\",nativeQuery = true)\n    int getRandomID();\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/SSE2020/WannaTry/databaserepo/UserRepository.java	(revision 2cbb5b41a2967221fbc456dd0dcb761fab4053b0)
+++ src/main/java/com/SSE2020/WannaTry/databaserepo/UserRepository.java	(date 1589560951147)
@@ -5,6 +5,8 @@
 import org.springframework.data.jpa.repository.Query;
 import org.springframework.stereotype.Repository;
 
+import java.lang.reflect.Array;
+import java.util.ArrayList;
 import java.util.Optional;
 
 @Repository
@@ -15,5 +17,8 @@
     @Query(value="CALL wannatryschema.random_id();",nativeQuery = true)
     int getRandomID();
 
-
+    @Query(value = "Select gender from wannatryschema.user",nativeQuery = true)
+    ArrayList<String> genders();
+    @Query(value = "Select ethnicity from wannatryschema.user",nativeQuery = true)
+    ArrayList<String> ethnicity();
 }
Index: src/main/webapp/WEB-INF/view/Home.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%--\n\n  User: kiowa\n  Date: 09/02/2020\n  Time: 21:41\n--%>\n<%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %>\n\n<%@ taglib prefix=\"f\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\n\n<html>\n<head>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"../../resources/css/Main.css\">\n    <style>\n\n    </style>\n\n    <title>Wanna Try - University Web Portal</title>\n</head>\n<body>\n<script src=\"https://d3js.org/d3.v5.min.js\" charset=\"utf-8\"></script>\n\n\n\n    <%@include file=\"sidebar.jsp\"%><br>\n\n    <div class=\"main\">\n<%--        Home page things go in here!--%>\n        <div class=\"parallax_top\"></div>\n        <title-large>Welcome to the University of Springfield Web Portal</title-large>\n        <p> Here At the School of Computer Science we strive to be diverse and inclusive.\n\n            Our vision is to create safe and effective learning spaces for students of all backgrounds!\n\n\n            With over one thousand students on our Dublin campus, the UCD School of Computer Science is the largest computer science department in Ireland. We offer a 4-year BSc Honours degree in Computer Science, a range a Masters degrees for both computer science graduates and conversion students, plus a suite of 4-year Structured PhD programmes. Our courses cover the principles and practise of computer science encompassing programming, algorithm development, and data science. All of our teaching is informed by state-of-the-art research conducted within the School. In short, our programmes are Software-Focused and Research-Led\n\n        </p>\n        <div class=\"parallax_gender\"></div>\n        <div id=\"pie-chart-area\" style=\"text-align: center\"></div>\n        <p> The School has topped the rankings for computer science research in Ireland for many years.\n\n            The School has over 130 postgraduate students working on the latest topics in computer science.\n\n            We host the Insight Centre for Data Analytics, the UCD Centre for Cybersecurity & Cybercrime Investigation, and the SFI Centre for Research Training in Machine Learning, amongst others.\n        </p>\n        <div class=\"parallax_gender_class\"></div>\n        <p>\n            UCD is ranked #1 in Ireland for graduate employability and graduates from the School are in high-demand from industry.\n            These industry opportunities are supported by popular internships programmes embedded within our B.Sc. and M.Sc. curricula.\n        </p>\n        <div class=\"parallax_graduates\"></div>\n    <p>We are a vibrant community of educators, researchers, students, staff, collaborators and friends. Join us.</p>\n\n\n    </div>\n\n</body>\n</html>\n<script>\n    // set the dimensions and margins of the graph\n    var width = 450\n    height = 450\n    margin = 40\n\n    // The radius of the pieplot is half the width or half the height (smallest one). I subtract a bit of margin.\n    var radius = Math.min(width, height) / 2 - margin\n\n    // append the svg object to the div called 'my_dataviz'\n    var svg = d3.select(\"#pie-chart-area\")\n        .append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\").selectAll(\"null\");\n\n    // Create dummy data\n\n    var data = {Male:${genders.get(\"MALE\")},Female:${genders.get(\"FEMALE\")},Other:${genders.get(\"OTHER\")}};\n\n    // set the color scale\n    var color = d3.scaleOrdinal()\n        .domain(data)\n        .range([\"#10c500\", \"#0044ff\", \"#ffaf00\", \"#ff0200\", \"#a05d56\"])\n\n    // Compute the position of each group on the pie:\n    var pie = d3.pie()\n        .value(function(d) {return d.value; })\n    var data_ready = pie(d3.entries(data))\n\n    // shape helper to build arcs:\n    var arcGenerator = d3.arc()\n        .innerRadius(0)\n        .outerRadius(radius)\n\n    // Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.\n    svg\n        .selectAll('whatever')\n        .data(data_ready)\n        .enter()\n        .append('path')\n        .attr('d', d3.arc()\n            .innerRadius(0)\n            .outerRadius(radius)\n        )\n        .attr('fill', function(d){ return(color(d.data.key)) })\n        .attr(\"stroke\", \"black\")\n        .style(\"stroke-width\", \"2px\")\n        .style(\"opacity\", 0.7)\n    svg\n        .selectAll('mySlices')\n        .data(data_ready)\n        .enter()\n        .append('text')\n        .text(function(d){ return d.data.key})\n        .attr(\"transform\", function(d) { return \"translate(\" + arcGenerator.centroid(d) + \")\";  })\n        .style(\"text-anchor\", \"middle\")\n        .style(\"font-size\", 17)\n\n</script>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/view/Home.jsp	(revision 2cbb5b41a2967221fbc456dd0dcb761fab4053b0)
+++ src/main/webapp/WEB-INF/view/Home.jsp	(date 1589560951163)
@@ -19,7 +19,7 @@
 </head>
 <body>
 <script src="https://d3js.org/d3.v5.min.js" charset="utf-8"></script>
-
+<meta charset="utf-8">
 
 
     <%@include file="sidebar.jsp"%><br>
@@ -36,8 +36,9 @@
             With over one thousand students on our Dublin campus, the UCD School of Computer Science is the largest computer science department in Ireland. We offer a 4-year BSc Honours degree in Computer Science, a range a Masters degrees for both computer science graduates and conversion students, plus a suite of 4-year Structured PhD programmes. Our courses cover the principles and practise of computer science encompassing programming, algorithm development, and data science. All of our teaching is informed by state-of-the-art research conducted within the School. In short, our programmes are Software-Focused and Research-Led
 
         </p>
-        <div class="parallax_gender"></div>
-        <div id="pie-chart-area" style="text-align: center"></div>
+<%--        <div class="parallax_gender"></div>--%>
+
+        <div id="pie-chart-area" class="main-content" style="text-align: center" ></div>
         <p> The School has topped the rankings for computer science research in Ireland for many years.
 
             The School has over 130 postgraduate students working on the latest topics in computer science.
@@ -46,7 +47,7 @@
         </p>
         <div class="parallax_gender_class"></div>
         <p>
-            UCD is ranked #1 in Ireland for graduate employability and graduates from the School are in high-demand from industry.
+            Springfield University is ranked #1 in Ireland for graduate employability and graduates from the School are in high-demand from industry.
             These industry opportunities are supported by popular internships programmes embedded within our B.Sc. and M.Sc. curricula.
         </p>
         <div class="parallax_graduates"></div>
@@ -57,17 +58,17 @@
 
 </body>
 </html>
-<script>
+<script type="text/javascript">
     // set the dimensions and margins of the graph
-    var width = 450
+    let width = 450;
     height = 450
     margin = 40
 
     // The radius of the pieplot is half the width or half the height (smallest one). I subtract a bit of margin.
-    var radius = Math.min(width, height) / 2 - margin
+    let radius = Math.min(width, height) / 2 - margin;
 
     // append the svg object to the div called 'my_dataviz'
-    var svg = d3.select("#pie-chart-area")
+    let svg = d3.select("#pie-chart-area")
         .append("svg")
         .attr("width", width)
         .attr("height", height)
@@ -76,22 +77,24 @@
 
     // Create dummy data
 
-    var data = {Male:${genders.get("MALE")},Female:${genders.get("FEMALE")},Other:${genders.get("OTHER")}};
+    let g_data = {Male:${genders.get("M")}, Female:${genders.get("F")}, Other:${genders.get("O")}};
 
     // set the color scale
-    var color = d3.scaleOrdinal()
-        .domain(data)
-        .range(["#10c500", "#0044ff", "#ffaf00", "#ff0200", "#a05d56"])
+    let color = d3.scaleOrdinal()
+        .domain(g_data)
+        .range(["#10c500", "#0044ff", "#ffaf00", "#ff0200", "#a05d56"]);
 
     // Compute the position of each group on the pie:
-    var pie = d3.pie()
-        .value(function(d) {return d.value; })
-    var data_ready = pie(d3.entries(data))
+    let pie = d3.pie()
+        .value(function (d) {
+            return d.value;
+        });
+    let data_ready = pie(d3.entries(g_data));
 
     // shape helper to build arcs:
-    var arcGenerator = d3.arc()
+    let arcGenerator = d3.arc()
         .innerRadius(0)
-        .outerRadius(radius)
+        .outerRadius(radius);
 
     // Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.
     svg
Index: src/main/webapp/WEB-INF/view/Login.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%--\n\n  User: kiowa\n  Date: 09/02/2020\n  Time: 21:41\n--%>\n<%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %>\n<%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\"%>\n<%@ taglib prefix=\"form\" uri=\"http://www.springframework.org/tags/form\" %>\n\n<html>\n<head>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"../../resources/css/Main.css\">\n    <title>Student Login</title>\n</head>\n<body>\n    <%@include file=\"sidebar.jsp\"%>\n\n    <div class=\"form-container\">\n        <title-medium>Student Login</title-medium>\n        <c:if test=\"${failed_attempt == true}\"><p>Username or password incorrect</p>p</c:if>\n        <form:form method=\"post\"  class='main-content'>\n            <input type =\"number\" class='input-box' placeholder='Student ID' name=\"id\" min=\"0\" max =\"2147483647\"><br><br>\n            <c:if test=\"${error!=null}\">\n                <error-text>${error}</error-text><br><br>\n            </c:if>\n            <input path=\"password\" class='input-box' placeholder='Password' name=\"pwd\"/><br><br>\n            <c:if test=\"${password_ok == false}\">\n                <error-text>Incorrect password, please try again!</error-text><br><br>\n            </c:if>\n            <input type=\"submit\" class='button' value=\"Login\">\n        </form:form>\n    </div>\n</body>\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/view/Login.jsp	(revision 2cbb5b41a2967221fbc456dd0dcb761fab4053b0)
+++ src/main/webapp/WEB-INF/view/Login.jsp	(date 1589561313027)
@@ -20,11 +20,11 @@
         <title-medium>Student Login</title-medium>
         <c:if test="${failed_attempt == true}"><p>Username or password incorrect</p>p</c:if>
         <form:form method="post"  class='main-content'>
-            <input type ="number" class='input-box' placeholder='Student ID' name="id" min="0" max ="2147483647"><br><br>
+            <input type ="number" class='input-box' placeholder='Student ID' name="id" min="0" max ="2147483647" required><br><br>
             <c:if test="${error!=null}">
                 <error-text>${error}</error-text><br><br>
             </c:if>
-            <input path="password" class='input-box' placeholder='Password' name="pwd"/><br><br>
+            <input path="password" class='input-box' placeholder='Password' name="pwd" required type="password"/><br><br>
             <c:if test="${password_ok == false}">
                 <error-text>Incorrect password, please try again!</error-text><br><br>
             </c:if>
Index: src/main/java/com/SSE2020/WannaTry/model/Logged_Actions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/SSE2020/WannaTry/model/Logged_Actions.java	(date 1589590806641)
+++ src/main/java/com/SSE2020/WannaTry/model/Logged_Actions.java	(date 1589590806641)
@@ -0,0 +1,75 @@
+package com.SSE2020.WannaTry.model;
+
+import javax.persistence.*;
+import javax.validation.constraints.NotNull;
+import java.util.Date;
+
+@Entity
+public class Logged_Actions {
+
+    @Id
+    @GeneratedValue(strategy = GenerationType.AUTO)
+    private int id;
+    @NotNull
+    private int USER_ID;
+    @NotNull
+    private String ACTION;
+    @NotNull
+    private String DESCRIPTION;
+    @NotNull
+    private String IP_ADDRESS;
+    @NotNull
+    private Date DATE_OF_ACTION;
+
+    public Logged_Actions() {
+    }
+
+    public Logged_Actions(int USER_ID, String ACTION, String DESCRIPTION, String IP_ADDRESS, Date DATE_OF_ACTION) {
+        this.USER_ID = USER_ID;
+        this.ACTION = ACTION;
+        this.DESCRIPTION = DESCRIPTION;
+        this.IP_ADDRESS = IP_ADDRESS;
+        this.DATE_OF_ACTION = DATE_OF_ACTION;
+    }
+
+    public int getUSER_ID() {
+        return USER_ID;
+    }
+
+    public void setUSER_ID(int USER_ID) {
+        this.USER_ID = USER_ID;
+    }
+
+    public String getACTION() {
+        return ACTION;
+    }
+
+    public void setACTION(String ACTION) {
+        this.ACTION = ACTION;
+    }
+
+    public String getDESCRIPTION() {
+        return DESCRIPTION;
+    }
+
+    public void setDESCRIPTION(String DESCRIPTION) {
+        this.DESCRIPTION = DESCRIPTION;
+    }
+
+    public String getIP_ADDRESS() {
+        return IP_ADDRESS;
+    }
+
+    public void setIP_ADDRESS(String IP_ADDRESS) {
+        this.IP_ADDRESS = IP_ADDRESS;
+    }
+
+    public Date getDATE_OF_ACTION() {
+        return DATE_OF_ACTION;
+    }
+
+    public void setDATE_OF_ACTION(Date DATE_OF_ACTION) {
+        this.DATE_OF_ACTION = DATE_OF_ACTION;
+    }
+}
+
Index: src/main/java/com/SSE2020/WannaTry/databaserepo/LoggedActionsRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/SSE2020/WannaTry/databaserepo/LoggedActionsRepository.java	(date 1589591150027)
+++ src/main/java/com/SSE2020/WannaTry/databaserepo/LoggedActionsRepository.java	(date 1589591150027)
@@ -0,0 +1,16 @@
+package com.SSE2020.WannaTry.databaserepo;
+
+import com.SSE2020.WannaTry.model.Logged_Actions;
+import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.data.jpa.repository.Modifying;
+import org.springframework.data.jpa.repository.Query;
+
+import java.util.Date;
+
+public interface LoggedActionsRepository extends JpaRepository<Logged_Actions,Integer> {
+
+    @Modifying
+    @Query(value = "INSERT INTO wannatryschema.logged_actions(USER_ID, ACTION, DESCRIPTION, IP_ADDRESS, DATE_OF_ACTION) VALUE (?1, ?2, ?3, ?4, ?5) ",nativeQuery = true)
+    void log(int id, String action, String desc, String IP, Date date);
+
+}
Index: target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>C:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\controller\\ModuleController.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\controller\\RegisterController.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\Example.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\databaserepo\\ModuleRepository.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\exceptions\\UserNotFoundException.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\controller\\GradesController.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\service\\CustomFailedAuthentication.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\controller\\LoginController.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\model\\FailedAttempts.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\exceptions\\EnrolementNotFoundException.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\exceptions\\StudentGradesNotFoundException.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\databaserepo\\RoleRepository.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\exceptions\\ModuleNotFoundException.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\databaserepo\\BlacklistRepository.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\model\\CustomUserDetails.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\model\\Role.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\databaserepo\\ModuleEnrolmentsRepository.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\databaserepo\\GradesRepository.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\model\\ModuleEnrolment.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\controller\\StaffController.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\exceptions\\BlockedIPException.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\controller\\DashboardController.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\databaserepo\\PrivilegeRepository.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\service\\CustomUserDetailsService.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\databaserepo\\LoginAttemptRepository.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\service\\ValidateRegistrationService.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\controller\\PaymentsController.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\model\\User.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\service\\BackendRepoService.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\controller\\LogoutController.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\service\\IDGenerator.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\service\\Configuration.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\exceptions\\StaffNotFoundException.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\model\\Grades.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\controller\\StudentGradesController.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\model\\User_Fee.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\controller\\HomePageController.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\model\\IP_Blacklist.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\service\\SecurityConfiguration.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\service\\MyAuthenticationRequest.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\model\\Modules.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\controller\\StudentModuleController.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\service\\SessionListener.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\service\\SetUpDataLoader.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\model\\Privilege.java\nC:\\Users\\kiowa\\IdeaProjects\\SSE_2020_WannaTry\\src\\main\\java\\com\\SSE2020\\WannaTry\\databaserepo\\UserRepository.java\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst	(revision 2cbb5b41a2967221fbc456dd0dcb761fab4053b0)
+++ target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst	(date 1589591288829)
@@ -1,46 +1,49 @@
 C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\controller\ModuleController.java
+C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\model\Logged_Actions.java
 C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\controller\RegisterController.java
 C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\Example.java
-C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\databaserepo\ModuleRepository.java
-C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\exceptions\UserNotFoundException.java
 C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\controller\GradesController.java
 C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\service\CustomFailedAuthentication.java
-C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\controller\LoginController.java
 C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\model\FailedAttempts.java
 C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\exceptions\EnrolementNotFoundException.java
-C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\exceptions\StudentGradesNotFoundException.java
 C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\databaserepo\RoleRepository.java
-C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\exceptions\ModuleNotFoundException.java
-C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\databaserepo\BlacklistRepository.java
-C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\model\CustomUserDetails.java
-C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\model\Role.java
+C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\service\ExceptionHandlers.java
+C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\service\ValidateService.java
 C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\databaserepo\ModuleEnrolmentsRepository.java
-C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\databaserepo\GradesRepository.java
 C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\model\ModuleEnrolment.java
-C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\controller\StaffController.java
-C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\exceptions\BlockedIPException.java
-C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\controller\DashboardController.java
+C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\databaserepo\LoggedActionsRepository.java
 C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\databaserepo\PrivilegeRepository.java
 C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\service\CustomUserDetailsService.java
-C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\databaserepo\LoginAttemptRepository.java
-C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\service\ValidateRegistrationService.java
 C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\controller\PaymentsController.java
-C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\model\User.java
 C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\service\BackendRepoService.java
 C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\controller\LogoutController.java
 C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\service\IDGenerator.java
 C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\service\Configuration.java
-C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\exceptions\StaffNotFoundException.java
 C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\model\Grades.java
-C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\controller\StudentGradesController.java
 C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\model\User_Fee.java
 C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\controller\HomePageController.java
-C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\model\IP_Blacklist.java
 C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\service\SecurityConfiguration.java
 C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\service\MyAuthenticationRequest.java
+C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\model\Privilege.java
+C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\databaserepo\ModuleRepository.java
+C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\exceptions\UserNotFoundException.java
+C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\controller\LoginController.java
+C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\exceptions\StudentGradesNotFoundException.java
+C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\exceptions\ModuleNotFoundException.java
+C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\databaserepo\BlacklistRepository.java
+C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\model\CustomUserDetails.java
+C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\model\Role.java
+C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\databaserepo\GradesRepository.java
+C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\controller\StaffController.java
+C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\exceptions\BlockedIPException.java
+C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\controller\DashboardController.java
+C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\databaserepo\LoginAttemptRepository.java
+C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\model\User.java
+C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\exceptions\StaffNotFoundException.java
+C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\controller\StudentGradesController.java
+C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\model\IP_Blacklist.java
 C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\model\Modules.java
 C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\controller\StudentModuleController.java
 C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\service\SessionListener.java
 C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\service\SetUpDataLoader.java
-C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\model\Privilege.java
 C:\Users\kiowa\IdeaProjects\SSE_2020_WannaTry\src\main\java\com\SSE2020\WannaTry\databaserepo\UserRepository.java
Index: src/main/resources/populate_db.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>SET GLOBAL log_bin_trust_function_creators = 1;\ndrop schema if exists wannatryschema;\ncreate schema wannatryschema;\n\nDROP TABLE if exists  wannatryschema.`grades`, `wannatryschema`.`module_enrolement`, `wannatryschema`.`modules`, `wannatryschema`.`new_table`, `wannatryschema`.`priveleges`, `wannatryschema`.`roles`, `wannatryschema`.`roles_priveleges`, `wannatryschema`.`user`, `wannatryschema`.`user_fee`, `wannatryschema`.`user_roles`;\n\n-- ROLE TABLE --\nCREATE TABLE if not exists `wannatryschema`.`roles` (\n  `id` int NOT NULL AUTO_INCREMENT,\n  `name` varchar(45) NOT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=91 DEFAULT CHARSET=utf8;\n\n-- login attempt table --\nCREATE TABLE `wannatryschema`.`failed_attempts` (\n  `id` INT NOT NULL AUTO_INCREMENT,\n  `IP_ADDRESS` VARCHAR(15) NOT NULL,\n  `ATTEMPTS` INT NOT NULL,\n  `LAST_ATTEMPT` DATETIME NOT NULL,\n  PRIMARY KEY (`id`),\n  UNIQUE INDEX `IP_ADDRESS_UNIQUE` (`IP_ADDRESS` ASC) VISIBLE);\n  \n-- PRIVILEGE TABLE --\nCREATE TABLE if not exists `wannatryschema`.`priveleges` (\n  `id` int NOT NULL UNIQUE,\n  `name` varchar(45) NOT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=88 DEFAULT CHARSET=utf8;\n\n-- ROLES_PRIVILIGE --\nCREATE TABLE if not exists `wannatryschema`.`roles_priveleges` (\n  `id` int NOT NULL AUTO_INCREMENT,\n  `role_id` int NOT NULL,\n  `privelege_id` int NOT NULL,\n  PRIMARY KEY (`id`),\n  KEY `FKfrby94iar8c4nowkfbu033b3u` (`privelege_id`),\n  KEY `FKejk7tly0tvig2pn74fxpm2ucs` (`role_id`),\n  CONSTRAINT `FKejk7tly0tvig2pn74fxpm2ucs` FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`),\n  CONSTRAINT `FKfrby94iar8c4nowkfbu033b3u` FOREIGN KEY (`privelege_id`) REFERENCES `priveleges` (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=82 DEFAULT CHARSET=utf8;\n\n-- USER TABLE --\nCREATE TABLE if not exists `wannatryschema`.`user` (\n  `id` int NOT NULL,\n  `address` varchar(255) NOT NULL,\n  `dob` date NOT NULL,\n  `ethnicity` varchar(255) NOT NULL,\n  `fname` varchar(255) NOT NULL,\n  `gender` char(1) NOT NULL,\n  `lname` varchar(255) NOT NULL,\n  `password` varchar(255) NOT NULL,\n  `phone_number` varchar(255) NOT NULL,\n  `email` varchar(255) NOT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\n-- USER ROLES --\nCREATE TABLE if not exists `wannatryschema`.`user_roles` (\n  `id` int NOT NULL AUTO_INCREMENT,\n  `user_id` int NOT NULL,\n  `role_id` int NOT NULL,\n  PRIMARY KEY (`id`),\n  KEY `FKh8ciramu9cc9q3qcqiv4ue8a6` (`role_id`),\n  KEY `FK55itppkw3i07do3h7qoclqd4k` (`user_id`),\n  CONSTRAINT `FK55itppkw3i07do3h7qoclqd4k` FOREIGN KEY (`user_id`) REFERENCES `user` (`id`),\n  CONSTRAINT `FKh8ciramu9cc9q3qcqiv4ue8a6` FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=3140 DEFAULT CHARSET=utf8;\n\n-- MODULE --\nCREATE TABLE if not exists `wannatryschema`.`modules` (\n  `module_id` varchar(8) NOT NULL,\n  `module_name` varchar(255) NOT NULL,\n  `description` varchar(255) DEFAULT NULL,\n  `end_date` date NOT NULL,\n  `price` double NOT NULL,\n  `start_date` date NOT NULL,\n  `lecturer_id` INT NOT NULL,\n  PRIMARY KEY (`module_id`),\n  UNIQUE KEY `module_name_UNIQUE` (`module_name`),\n  UNIQUE KEY `module_id_UNIQUE` (`module_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\n-- module enrolement --\nCREATE TABLE if not exists `wannatryschema`.`module_enrolement` (\n  `id` int NOT NULL AUTO_INCREMENT,\n  `student_id` int NOT NULL,\n  `module_id` varchar(8) NOT NULL,\n  PRIMARY KEY (`id`),\n  KEY `FKmnvefqj644xdkvel0iptlpeyw` (`student_id`),\n  CONSTRAINT `FKhxgsf7oi56y6257tfwb43ruib` FOREIGN KEY (`module_id`) REFERENCES `modules` (`module_id`),\n  CONSTRAINT `FKmnvefqj644xdkvel0iptlpeyw` FOREIGN KEY (`student_id`) REFERENCES `user` (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\n\nCREATE TABLE if not exists `wannatryschema`.`grades` (\n  `id` int NOT NULL AUTO_INCREMENT,\n  `module_id` varchar(8) NOT NULL,\n  `student_id` int NOT NULL,\n  `percentage` double NOT NULL,\n  `Letter` varchar(1) NOT NULL,\n  `feedback` varchar(4255) DEFAULT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nCREATE TABLE if not existS `wannatryschema`.`new_table` (\n  `id` int NOT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nCREATE TABLE `wannatryschema`.`user_fee` (\n  `id` int NOT NULL,\n  `fees` double NOT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\n\n\n\n-- HELPER FUNCTIONS\n-- ----------------------\n-- CREATE ROLES\n\ndrop procedure if exists `wannatryschema`.`load_role_data`;\ndelimiter $$\nCREATE procedure wannatryschema.load_role_data()\n\tBEGIN\n\t\tREPLACE INTO roles VALUE (50,\"ROLE_ADMIN\");\n\t\tREPLACE INTO roles VALUE (60,\"ROLE_STAFF\");\n\t\tREPLACE INTO roles VALUE (70,\"ROLE_STUDENT\");\n\tEND $$\nDELIMITER ;\nCALL wannatryschema.load_role_data();\n\n-- CREATE RANDOM ADDRESS\nDROP function if exists wannatryschema.generateAddress;\nDELIMITER $$\nCREATE FUNCTION  wannatryschema.generateAddress() RETURNS varchar(255)\nBEGIN\n\tRETURN ELT(FLOOR(1 + (RAND() * (100-1))),\"36 Newgate Street, Cottingham, HU16 4DT\",\n\"10 Ballards Close, Mickleton, GL55 6RL\",\n\"3 Rothesay Crescent, Heysham, LA3 2XR\",\n\"17 Glen Close, Little Bytham, NG33 4PS\",\n\"Bryn Hyfryd, Mount Pleasant, Denbigh, LL16 3LS\",\n\"41 Bramble Hill, Beverley, HU17 8UZ\",\n\"1 Churchill Road, Cirencester, GL7 1AH\",\n\"18 Summerleaze Avenue, Bude, EX23 8NP\",\n\"Thorpe Fen House, Thorpe Fen, Thorpe St Peter, PE24 4LD\",\n\"4 The Graylands, Cardiff, CF14 6AS\",\n\"Old Vicarage, Uppington, TF6 5HN\",\n\"Blubeckers, Bath Road, Hare Hatch, RG10 9SB\",\n\"5 Bryn Celyn, Pontardawe, SA8 4LG\",\n\"27 Welshpool Close, Bransholme, HU7 5DN\",\n\"13 Glenside Court, Breckenbeds Road, Gateshead, NE9 6HW\",\n\"23 Gwynfryn Road, Pontarddulais, SA4 8LG\",\n\"7 Green Crescent, Bucklesham, IP10 0EA\",\n\"24 Portland Grange, Hucknall, NG15 6RS\",\n\"21 Devonshire Street, Huddersfield, HD1 3TR\",\n\"16 South Road, Ash Vale, GU12 5AJ\",\n\"5C School Street, Brierley Hill, DY5 4HQ\",\n\"Bridge House, Trumpsgreen Road, Virginia Water, GU25 4JA\",\n\"3 Roundwood Close, Welwyn, AL6 0XB\",\n\"Lamorna, Hall Road, Bedingfield, IP23 7QE\",\n\"4 Midfield Way, Keelby, DN41 8SL\",\n\"23A Swains Lane, London, N6 6QX\",\n\"9 Barcelona Crescent, Wroughton, SN4 9EE\",\n\"9 Glendale Terrace, Whitland, SA34 0QP\",\n\"Eton House, Little Tew, OX7 4JJ\",\n\"84 Broadmead, Bristol, BS1 3DW\",\n\"6 Cambrian Terrace, Porthmadog, LL49 9EH\",\n\"5 Arle Gardens, Cheltenham, GL51 8HP\",\n\"50 Marlescroft Way, Loughton, IG10 3NA\",\n\"6 Botany Cottages, London Road, Purfleet, RM19 1PS\",\n\"Apartment 62, 68 Falkner Street, Liverpool, L8 7AE\",\n\"2 Duxford, Duxford, SN7 8SQ\",\n\"14 Sandpiper Drive, Houndstone, BA22 8FN\",\n\"2 Williams Close, Dawlish, EX7 9SP\",\n\"3 Rye Gardens, Little Downham, CB6 2RY\",\n\"20 Durham Road, Wolviston, TS22 5LP\",\n\"20 Abbey Street, Accrington, BB5 1EB\",\n\"10 Altwood, Harpenden, AL5 5RU\",\n\"238 Whitley Road, Whitley Bay, NE26 2TE\",\n\"11 Batstone Way, Ferndown, BH22 9TJ\",\n\"Millbrook House, Murcot, WR12 7HS\",\n\"3 Hillside, Sedgeford, PE36 5NF\",\n\"10 Reade Court, Victoria Road, Farnham Common, SL2 3NW\",\n\"3 Ashdale Close, Staines, TW19 7BA\",\n\"14 Whitecroft Crescent, Brinsworth, S60 5HW\",\n\"1 Hillview Drive, Hanley Swan, WR8 0EL\",\n\"37 Draycott, Telford, TF3 2DN\",\n\"Chevin, Rye Park, Beaford, EX19 8LY\",\n\"16 Hill Brow, Bearsted, ME14 4AW\",\n\"1 Planton Way, Brightlingsea, CO7 0LB\",\n\"162 Westbury Avenue, London, N22 6RU\",\n\"2 Blackthorn Lane, Cherry Willingham, LN3 4FD\",\n\"Broom Lodge, Pitt Road, Hinton St George, TA17 8SR\",\n\"Ael Y Bryn, Beulah, LD5 4YE\",\n\"Ground Floor Premises, 2 - 4 North Parade, Chessington, KT9 1QF\",\n\"35 Upper Belgrave Road, Bristol, BS8 2XN\",\n\"Percy Thrower's Gardening Centre, Thrower Road, Shrewsbury, SY2 6QW\",\n\"Bramble Rough, Upper Hartfield, TN7 4DL\",\n\"44 The Layne, Bognor Regis, PO22 6JL\",\n\"Bourbon Court, Nightingales Corner, Amersham, HP7 9QS\",\n\"Briar Cottage, High Street, Marden, TN12 9DR\",\n\"13 High Street, Yatton, BS49 4JD\",\n\"Lavender Cottage, Reynalton, SA68 0PG\",\n\"3 Aycliffe Gardens, Plymouth, PL7 1YN\",\n\"2 Bellfield Avenue, Harrow, HA3 6SX\",\n\"200 Town Street, Middleton, LS10 3TJ\",\n\"9 Roffey Close, Purley, CR8 4BH\",\n\"Warehouse 3, Balch House, New Spitalfields Market, 25 Sherrin Road, London, E10 5SQ\",\n\"1 Wonersh Court, The Street, Wonersh, GU5 0PG\",\n\"1 Manor Villas, Lechlade, GL7 3AY\",\n\"Flat 7, Kensington Apartments, 11 Commercial Street, London, E1 6LW\",\n\"23 Christow Street, Leicester, LE1 2GJ\",\n\"3 Hockney Gardens, Ipswich, IP3 0RY\",\n\"Hillside House, Argoed, NP12 0HR\",\n\"2 Highways Cottages, Farnham Road, Liss, GU33 6JD\",\n\"27 Brook Road, Bomere Heath, SY4 3PY\",\n\"The Fron, Kinnersley, HR3 6QB\",\n\"Perranporth, Weydon Farm Lane, Farnham, GU9 8QJ\",\n\"Vallarta House, 150A Clevedon Road, Tickenham, BS21 6RG\",\n\"8 Clarendon Path, Orpington, BR5 2PD\",\n\"127 Langsett Crescent, Sheffield, S6 2TW\",\n\"82 Church Street, Crowthorne, RG45 7AN\",\n\"39 Valley Drive, Wilnecote, B77 5FL\",\n\"6 Nobes Close, Gosport, PO13 0JL\",\n\"56 Tandridge Court, 189 - 197 Croydon Road, Caterham, CR3 6PT\",\n\"5 Bark Knotts Terrace, Norton, YO17 9DX\",\n\"Ward Green Post Office, 97 Vernon Road, Worsbrough, S70 5HJ\",\n\"7 Jubilee Close, Spennymoor, DL16 6GA\",\n\"Cherry Trees, Pit Road, Hemsby, NR29 4LG\",\n\"7 Woodstock Rise, Sutton, SM3 9JE\",\n\"56 Crossways, York, YO10 5JQ\",\n\"10 Baltic Street, Salford, M5 5JT\",\n\"3 Bullen Court, New North Road, Ilford, IG6 2UY\",\n\"24 Ashton Road, Darwen, BB3 2DX\",\n\"10 Heron Road, Twickenham, TW1 1PG\",\n\"Brecon House, Castle Dene, DH3 4HE\" );\nEND $$\nDELIMITER ;\n\n-- RANDOM DATE --\ndrop function if exists wannatryschema.dateRand;\nDELIMITER $$\nCREATE function wannatryschema.dateRand() returns DATE\n\tBEGIN\n\t\tDECLARE days_between int;\n\t\tDECLARE startdate DATE;\n\t\tDECLARE enddate DATE;\n\t\tDECLARE days_rand int;\n\t\tSET startdate = '1996-01-01';\n\t\tSET enddate = '2001-12-31';\n\t\tSET days_between = datediff(startdate,enddate);\n\t\tSET days_rand = RAND()*10000 % days_between;\n\t\treturn date_add(startdate,INTERVAL days_rand DAY);\n\tend $$\nDELIMITER ;\n\n-- RANDOM ETHNICITY --\ndrop function if exists wannatryschema.random_ethnicity;\nDELIMITER $$\nCREATE FUNCTION wannatryschema.random_ethnicity() RETURNS varchar(255)\nBEGIN\n\treturn ELT(FLOOR(1+(RAND() * (4))),\"White\",\"Black or African American\",\"Ameican Indian or Alaska Native\",\"Asian\",\"African\");\nEND $$\nDELIMITER ;\n\n-- RANDOM FNAME\nDROP function if exists wannatryschema.generate_fname;\nDELIMITER $$\nCREATE FUNCTION wannatryschema.generate_fname () RETURNS varchar(255)\nBEGIN\n\tRETURN ELT(FLOOR(1 + (RAND() * (100-1))), \"James\",\"Mary\",\"John\",\"Patricia\",\"Robert\",\"Linda\",\"Michael\",\"Barbara\",\"William\",\"Elizabeth\",\"David\",\"Jennifer\",\"Richard\",\"Maria\",\"Charles\",\"Susan\",\"Joseph\",\"Margaret\",\"Thomas\",\"Dorothy\",\"Christopher\",\"Lisa\",\"Daniel\",\"Nancy\",\"Paul\",\"Karen\",\"Mark\",\"Betty\",\"Donald\",\"Helen\",\"George\",\"Sandra\",\"Kenneth\",\"Donna\",\"Steven\",\"Carol\",\"Edward\",\"Ruth\",\"Brian\",\"Sharon\",\"Ronald\",\"Michelle\",\"Anthony\",\"Laura\",\"Kevin\",\"Sarah\",\"Jason\",\"Kimberly\",\"Matthew\",\"Deborah\",\"Gary\",\"Jessica\",\"Timothy\",\"Shirley\",\"Jose\",\"Cynthia\",\"Larry\",\"Angela\",\"Jeffrey\",\"Melissa\",\"Frank\",\"Brenda\",\"Scott\",\"Amy\",\"Eric\",\"Anna\",\"Stephen\",\"Rebecca\",\"Andrew\",\"Virginia\",\"Raymond\",\"Kathleen\",\"Gregory\",\"Pamela\",\"Joshua\",\"Martha\",\"Jerry\",\"Debra\",\"Dennis\",\"Amanda\",\"Walter\",\"Stephanie\",\"Patrick\",\"Carolyn\",\"Peter\",\"Christine\",\"Harold\",\"Marie\",\"Douglas\",\"Janet\",\"Henry\",\"Catherine\",\"Carl\",\"Frances\",\"Arthur\",\"Ann\",\"Ryan\",\"Joyce\",\"Roger\",\"Diane\");\nEND $$\nDELIMITER ;\n-- RANDOM LNAME --\nDROP function if exists wannatryschema.generate_lname;\nDELIMITER $$\nCREATE FUNCTION wannatryschema.generate_lname () RETURNS varchar(255)\nBEGIN\n\tRETURN ELT(FLOOR(1 + (RAND() * (100-1))), \"Smith\",\"Johnson\",\"Williams\",\"Jones\",\"Brown\",\"Davis\",\"Miller\",\"Wilson\",\"Moore\",\"Taylor\",\"Anderson\",\"Thomas\",\"Jackson\",\"White\",\"Harris\",\"Martin\",\"Thompson\",\"Garcia\",\"Martinez\",\"Robinson\",\"Clark\",\"Rodriguez\",\"Lewis\",\"Lee\",\"Walker\",\"Hall\",\"Allen\",\"Young\",\"Hernandez\",\"King\",\"Wright\",\"Lopez\",\"Hill\",\"Scott\",\"Green\",\"Adams\",\"Baker\",\"Gonzalez\",\"Nelson\",\"Carter\",\"Mitchell\",\"Perez\",\"Roberts\",\"Turner\",\"Phillips\",\"Campbell\",\"Parker\",\"Evans\",\"Edwards\",\"Collins\",\"Stewart\",\"Sanchez\",\"Morris\",\"Rogers\",\"Reed\",\"Cook\",\"Morgan\",\"Bell\",\"Murphy\",\"Bailey\",\"Rivera\",\"Cooper\",\"Richardson\",\"Cox\",\"Howard\",\"Ward\",\"Torres\",\"Peterson\",\"Gray\",\"Ramirez\",\"James\",\"Watson\",\"Brooks\",\"Kelly\",\"Sanders\",\"Price\",\"Bennett\",\"Wood\",\"Barnes\",\"Ross\",\"Henderson\",\"Coleman\",\"Jenkins\",\"Perry\",\"Powell\",\"Long\",\"Patterson\",\"Hughes\",\"Flores\",\"Washington\",\"Butler\",\"Simmons\",\"Foster\",\"Gonzales\",\"Bryant\",\"Alexander\",\"Russell\",\"Griffin\",\"Diaz\",\"Hayes\");\nEND $$\nDELIMITER ;\n\n-- RANDOM GENDER\ndrop function if exists wannatryschema.random_gender;\nDELIMITER $$\nCREATE FUNCTION wannatryschema.random_gender() RETURNS varchar(1)\nBEGIN\n\treturn ELT(FLOOR(1+RAND()*2),\"M\",\"F\",\"O\");\nEND $$\nDELIMITER ;\n\n-- RANDOM STAFF --\nDROP function if exists wannatryschema.findStaff;\nDELIMITER $$\nCREATE function wannatryschema.findStaff() RETURNS int\nBEGIN \n\tRETURN ((SELECT u.id FROM user as u join user_roles as ur where u.id = ur.user_id and ur.role_id = 60)  ORDER BY RAND() LIMIT 1);\nEND $$\nDELIMITER ;\n\n-- RANDOM START DATE --\nDROP function if exists wannatryschema.get_start_date;\nDELIMITER $$\nCREATE function wannatryschema.get_start_date() RETURNS date\nBEGIN \n\tDECLARE sem1 DATE;\n    DECLARE sem1ALT DATE;\n    DECLARE sem2 DATE;\n    DECLARE sem2ALT DATE;\n    SET sem1 = '2020-09-14';\n    SET sem2 = '2021-01-22';\n    SET sem1ALT = '2019-09-14';\n    SET sem2ALT = '2020-01-22';\n    \n\tRETURN ELT(FLOOR(1 + (RAND() * (5-1))), sem1,sem2,sem1ALT,sem2ALT);\nEND $$\nDELIMITER ;\n-- RANDOM END DATE --\nDROP function if exists wannatryschema.get_end_date;\nDELIMITER $$\nCREATE function wannatryschema.get_end_date() RETURNS date\n\tBEGIN \n\t\tDECLARE sem1 DATE;\n\t\tDECLARE sem2 DATE;\n\t\tSET sem1 = '2020-11-26';\n\t\tSET sem2 = '2021-04-24';\n\t\tRETURN ELT(FLOOR(1 + (RAND() * (3-1))), sem1,sem2);\n\tEND $$\nDELIMITER ;\n\nDROP function if exists wannatryschema.generate_name_prefix;\nDELIMITER $$\nCREATE function wannatryschema.generate_name_prefix() RETURNS varchar(255)\nBEGIN \n\tRETURN ELT(FLOOR(1 + (RAND() * (3))), \"Introduction to \",\"Advanced \",\"Secure \",\"Modern \",\"Theoretical \");\nEND$$\nDELIMITER ;\n\nDROP function if exists wannatryschema.generate_name_suffix;\nDELIMITER $$\nCREATE function wannatryschema.generate_name_suffix() RETURNS varchar(255)\nBEGIN \n\tRETURN ELT(FLOOR(1 + (RAND() * (7))), \"Software Engineering\",\"Networking\",\"Android Development\",\"Ethical Hacking\",\"iOS Development\",\"Data Structures and Algorithms\",\"Artificial Intelligence\",\"Functional Programming\",\"Linear Algebra\",\"Game Development\");\nEND$$\nDELIMITER ;\nDrop function if exists wannatryschema.random_id;\nDelimiter $$\nCreate function wannatryschema.random_id() returns int\nBEGIN\n\tdeclare ID int;\n    set ID = (select * from new_table order by Rand() limit 1);\n    DELETE FROM new_table where new_table.id = ID;\n\tRETURN ID;\nEND$$\nDELIMITER ;\n\n\n-- CREATES 200 RANDOM IDS\ndrop procedure if exists wannatryschema.load_foo_test_data;\n\ndelimiter $$\ncreate procedure wannatryschema.load_foo_test_data()\nbegin\n\ndeclare v_max int unsigned default 3000;\ndeclare v_counter int unsigned default 0;\n\n  truncate table wannatryschema.new_table;\n  start transaction;\n  while v_counter < v_max do\n    replace into wannatryschema.new_table values( LPAD(FLOOR(RAND() * 9999999), 8,1));\n    set v_counter=v_counter+1;\n  end while;\n  commit;\nend $$\n\ndelimiter ;\n\ncall wannatryschema.load_foo_test_data();\n\n-- RANDOM ID PROCEDURE --\ndrop procedure if exists wannatryschema.RANDOM_ID;\ndelimiter $$\ncreate procedure wannatryschema.RANDOM_ID()\nBEGIN\n    declare ID int;\n    set ID = (select * from wannatryschema.new_table order by Rand() limit 1);\n    DELETE FROM wannatryschema.new_table where wannatryschema.new_table.id = ID;\n\tSELECT ID;\nEND $$\ndelimiter ;\n\n\n-- CREATES STUDENTS AND ASSIGNS STUDENT ROLE\ndrop procedure if exists wannatryschema.load_user_data;\ndelimiter $$\ncreate procedure wannatryschema.load_user_data()\nbegin\ndeclare v_max int unsigned default 100;\ndeclare v_counter int unsigned default 0;\ndeclare mid int;\n start transaction;\n  while v_counter < v_max do\n  set mid = random_id();\n    replace INTO wannatryschema.user (id,address,dob,ethnicity,fname,gender,lname,password,phone_number,email)\nVALUES (mid,generateAddress(),dateRand(),random_ethnicity(),generate_fname(),random_gender(),generate_lname(),'$2a$10$fUwYy1YDiQNWg345oRVer.Aqvy02pnTfahNwhtXrnyx1bGY4JcDwW',123456789,'testemail@gmail.com');\n    REPLACE Into wannatryschema.user_roles (user_id,role_id)\n    VALUES (mid,70);\n    set v_counter=v_counter+1;\n  end while;\n  commit;\nend $$\ndelimiter ;\n\ncall wannatryschema.load_user_data();\n\n-- CREATES STAFF AND ASSIGNS STAFF ROLE\ndrop procedure if exists wannatryschema.load_staff_data;\ndelimiter #\ncreate procedure wannatryschema.load_staff_data()\nbegin\ndeclare v_max int unsigned default 15;\ndeclare v_counter int unsigned default 0;\ndeclare mid int;\n\n start transaction;\n  while v_counter < v_max do\n  set mid = random_id();\n    replace INTO wannatryschema.user (id,address,dob,ethnicity,fname,gender,lname,password,phone_number,email)\nVALUES (mid,generateAddress(),dateRand(),random_ethnicity(),generate_fname(),random_gender(),generate_lname(),'$2a$10$fUwYy1YDiQNWg345oRVer.Aqvy02pnTfahNwhtXrnyx1bGY4JcDwW',123456789,'staffemail@gmail.com');\n    replace Into wannatryschema.user_roles (user_id,role_id)\n    VALUES (mid,60);\n    set v_counter=v_counter+1;\n  end while;\n  commit;\nend #\ndelimiter ;\n\ncall wannatryschema.load_staff_data();\n\nDROP procedure if exists wannatryschema.load_module_data;\nDELIMITER $$\nCREATE PROCEDURE wannatryschema.load_module_data()\n\tBEGIN\n\t\tDECLARE\t\tX\tINT;\n        DECLARE s_date DATE;\n        DECLARE e_date DATE;\n        SET X = 1;\n\tREPEAT\n\t\tSET s_date = get_start_date();\n\t\tIF s_date = '2019-09-14' then set e_date = '2019-11-26';\n\t\tELSEIF s_date = '2020-01-22' then set e_date = '2020-04-24';\n\t\tELSEIF s_date = '2020-09-13' then set e_date = '2020-11-26';\n\t\tELSEIF s_date = '2021-01-22' then set e_date = '2021-04-24';\n        END IF;\n\t\tREPLACE INTO modules\n        VALUES (concat(\"COMP\",LPAD(X,4,0)) ,concat(generate_name_prefix(),generate_name_suffix()),\"description\",e_date,360.00,s_date,findStaff());\n        SET X = X + 1;\n        \n\tuntil X>100\n    END REPEAT;\n    END$$\nDELIMITER ;\n\ncall wannatryschema.load_module_data();\n\n-- CREATES STAFF AND ASSIGNS STAFF ROLE\n-- drop procedure if exists load_staff_module_data;\n-- delimiter #\n-- create procedure load_staff_module_data()\n-- begin\n-- declare v_max int unsigned default 15;\n-- declare v_counter int unsigned default 0;\n-- declare sid int;\n-- declare m_id varchar(8);\n\n--  start transaction;\n--   while v_counter < v_max do\n--   set sid = getRandomStaff();\n--   set m_id = randomModule();\n-- \t\tINSERT INTO staff_module (id,staff_id,module_id) VALUES (concat(sid,concat('/',m_id)),sid,m_id);\n--     set v_counter=v_counter+1;\n--   end while;\n--   commit;\n-- end #\n-- delimiter ;\n\n\n-- random enrolment --\ndrop procedure if exists wannatryschema.random_enrol;\nDELIMITER $$\nCREATE procedure wannatryschema.random_enrol()\nBEGIN\n\tDECLARE COUNTER INT ;\n\tDECLARE s_id INT;\n    DECLARE m_id VARCHAR(8);\n    SET COUNTER = 1;\n    repeat\n\t\tSET s_id = ((SELECT u.id from user as u JOIN user_roles as ur where u.id = ur.user_id and ur.role_id= 70) order by RAND() LIMIT 1);\n\t\tSET m_id = (SELECT module_id from modules order by RAND() LIMIT 1);\n\t\tREPLACE INTO module_enrolement (student_id,module_id)\n\t\tVALUE(s_id,m_id);\n        SET COUNTER = COUNTER +1;\n\tuntil COUNTER > 40\n    END REPEAT;\n\tEND $$\nDELIMITER ;\ncall wannatryschema.random_enrol();\n\ndrop procedure if exists wannatryschema.populate_roles_privi;\nDELIMITER $$\nCREATE procedure wannatryschema.populate_roles_privi()\nBEGIN\n\tINSERT INTO priveleges(id,name) VALUE(20,\"READ\");\n    INSERT INTO priveleges(id,name) VALUE(30,\"WRITE\");\n    INSERT INTO priveleges(id,name) VALUE(40,\"DELETE\");\n    \n    -- ADMIN --\n    INSERT INTO roles_priveleges(role_id,privelege_id) VALUE(50,20);\n    INSERT INTO roles_priveleges(role_id,privelege_id) VALUE(50,30);\n    INSERT INTO roles_priveleges(role_id,privelege_id) VALUE(50,40);\n    -- STAFF --\n    INSERT INTO roles_priveleges(role_id,privelege_id) VALUE(60,20);\n    INSERT INTO roles_priveleges(role_id,privelege_id) VALUE(60,30);\n    -- STUDENT --\n    INSERT INTO roles_priveleges(role_id,privelege_id) VALUE(70,20);\n    \nEND $$\nDELIMITER ;\ncall wannatryschema.populate_roles_privi();\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/populate_db.sql	(revision 2cbb5b41a2967221fbc456dd0dcb761fab4053b0)
+++ src/main/resources/populate_db.sql	(date 1589591553065)
@@ -18,7 +18,17 @@
   `ATTEMPTS` INT NOT NULL,
   `LAST_ATTEMPT` DATETIME NOT NULL,
   PRIMARY KEY (`id`),
-  UNIQUE INDEX `IP_ADDRESS_UNIQUE` (`IP_ADDRESS` ASC) VISIBLE);
+  UNIQUE INDEX `IP_ADDRESS_UNIQUE` (`IP_ADDRESS` ASC));
+  
+  -- Action log table --
+CREATE TABLE `wannatryschema`.`logged_actions` (
+  `id` INT NOT NULL AUTO_INCREMENT,
+  `USER_ID` int NOT NULL,
+  `ACTION` VARCHAR(30) NOT NULL,
+  `DESCRIPTION` VARCHAR(100) NOT NULL,
+  `IP_ADDRESS` VARCHAR(15) NOT NULL,
+  `DATE_OF_ACTION` DATETIME NOT NULL,
+  PRIMARY KEY (`id`));
   
 -- PRIVILEGE TABLE --
 CREATE TABLE if not exists `wannatryschema`.`priveleges` (
Index: src/main/java/com/SSE2020/WannaTry/controller/PaymentsController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.SSE2020.WannaTry.controller;\n\n\nimport com.SSE2020.WannaTry.model.CustomUserDetails;\nimport com.SSE2020.WannaTry.model.User;\nimport com.SSE2020.WannaTry.service.BackendRepoService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.jdbc.JdbcUpdateAffectedIncorrectNumberOfRowsException;\nimport org.springframework.security.core.context.SecurityContextHolder;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.ModelAttribute;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\n\nimport javax.servlet.http.HttpServletRequest;\nimport javax.transaction.Transactional;\nimport java.util.Optional;\n\n\n@Controller\npublic class PaymentsController {\n\n    @Autowired\n    BackendRepoService repoService;\n\n\n    @RequestMapping(value = \"/Payments\",method = RequestMethod.GET)\n    public String goToPaymentPage(Model model){\n\n        CustomUserDetails userDetails = (CustomUserDetails) SecurityContextHolder.getContext().getAuthentication().getPrincipal();\n        User user = userDetails.getUser();\n        model.addAttribute(\"current_user\",user);\n\n        Optional<Double> opt_fees_due = repoService.getModuleRepo().getFeesDue(user.getID());\n        if(opt_fees_due.isPresent()){\n            if(opt_fees_due.get() == 0.00){\n                return \"redirect:/Dashboard\";\n            }\n            model.addAttribute(\"fees_due\",opt_fees_due.get());\n            model.addAttribute(\"isStaff\",false);\n            model.addAttribute(\"isStudent\",true);\n            model.addAttribute(\"flag\",false);\n            return \"Payments\";\n        }\n        return \"error\";\n    }\n    @RequestMapping(value = \"/PaymentsError\",method = RequestMethod.GET)\n    public String goToPaymentPageError(Model model){\n\n        CustomUserDetails userDetails = (CustomUserDetails) SecurityContextHolder.getContext().getAuthentication().getPrincipal();\n        User user = userDetails.getUser();\n        model.addAttribute(\"current_user\",user);\n\n        Optional<Double> opt_fees_due = repoService.getModuleRepo().getFeesDue(user.getID());\n        if(opt_fees_due.isPresent()){\n            if(opt_fees_due.get() == 0.00){\n                return \"redirect:/Dashboard\";\n            }\n            model.addAttribute(\"fees_due\",opt_fees_due.get());\n            model.addAttribute(\"isStaff\",false);\n            model.addAttribute(\"isStudent\",true);\n            model.addAttribute(\"flag\",false);\n            model.addAttribute(\"invalid\",true);\n            return \"Payments\";\n        }\n        return \"error\";\n    }\n\n    @Transactional\n    @RequestMapping(value=\"/update_balance\",method= RequestMethod.POST)\n    public String updateBalance(@ModelAttribute(\"fees_input\")double input, Model model){\n\n        CustomUserDetails userDetails = (CustomUserDetails) SecurityContextHolder.getContext().getAuthentication().getPrincipal();\n        User user = userDetails.getUser();\n        Optional<Double> opt_fees_due = repoService.getModuleRepo().getFeesDue(user.getID());\n\n        double input_amount = Double.valueOf(input);\n\n        if(opt_fees_due.get()-input_amount <0.00){\n            return \"redirect:/PaymentsError\";\n        }\n        repoService.getModuleRepo().updateFees(user.getID(),opt_fees_due.get()-input_amount);\n        return \"redirect:/Payments\";\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/SSE2020/WannaTry/controller/PaymentsController.java	(revision 2cbb5b41a2967221fbc456dd0dcb761fab4053b0)
+++ src/main/java/com/SSE2020/WannaTry/controller/PaymentsController.java	(date 1589562912575)
@@ -9,12 +9,14 @@
 import org.springframework.security.core.context.SecurityContextHolder;
 import org.springframework.stereotype.Controller;
 import org.springframework.ui.Model;
+import org.springframework.web.bind.annotation.ExceptionHandler;
 import org.springframework.web.bind.annotation.ModelAttribute;
 import org.springframework.web.bind.annotation.RequestMapping;
 import org.springframework.web.bind.annotation.RequestMethod;
 
 import javax.servlet.http.HttpServletRequest;
 import javax.transaction.Transactional;
+import java.net.BindException;
 import java.util.Optional;
 
 
@@ -77,10 +79,11 @@
 
         double input_amount = Double.valueOf(input);
 
-        if(opt_fees_due.get()-input_amount <0.00){
+        if(opt_fees_due.get()-input_amount <0.00 || input <0.00){
             return "redirect:/PaymentsError";
         }
         repoService.getModuleRepo().updateFees(user.getID(),opt_fees_due.get()-input_amount);
         return "redirect:/Payments";
     }
+
 }
Index: src/main/java/com/SSE2020/WannaTry/service/ValidateRegistrationService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.SSE2020.WannaTry.service;\n\nimport com.SSE2020.WannaTry.model.User;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class ValidateRegistrationService {\n    public boolean validateFields(User user) {\n        return false;\n    }\n}\n
===================================================================
--- src/main/java/com/SSE2020/WannaTry/service/ValidateRegistrationService.java	(revision 2cbb5b41a2967221fbc456dd0dcb761fab4053b0)
+++ src/main/java/com/SSE2020/WannaTry/service/ValidateService.java	(date 1589561803058)
@@ -4,8 +4,10 @@
 import org.springframework.stereotype.Service;
 
 @Service
-public class ValidateRegistrationService {
-    public boolean validateFields(User user) {
+public class ValidateService {
+
+    public boolean validateRegFields(User user) {
+
         return false;
     }
 }
Index: src/main/java/com/SSE2020/WannaTry/service/SecurityConfiguration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.SSE2020.WannaTry.service;\n\nimport com.SSE2020.WannaTry.exceptions.UserNotFoundException;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.data.jpa.repository.config.EnableJpaRepositories;\nimport org.springframework.security.authentication.dao.DaoAuthenticationProvider;\nimport org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.builders.WebSecurity;\nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\nimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\nimport org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\nimport org.springframework.security.crypto.password.PasswordEncoder;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.ExceptionHandler;\n\nimport javax.sql.DataSource;\n\n@Configuration\n@EnableWebSecurity\n@EnableJpaRepositories(basePackages = {\"com.SSE2020.WannaTry.databaserepo\"})\npublic class SecurityConfiguration extends WebSecurityConfigurerAdapter {\n\n    @Autowired\n    DataSource dataSource;\n    @Autowired\n    private CustomUserDetailsService userDetailsService;\n\n    @Autowired\n    public void configure(AuthenticationManagerBuilder auth) throws Exception {\n            auth.authenticationProvider(authenticationProvider());\n    }\n\n    @Override\n    public void configure(WebSecurity web) throws Exception {\n        web.ignoring().antMatchers(\"/resources/**\");\n    }\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception{\n        http\n                .csrf().and()\n                .authorizeRequests()\n                    .antMatchers(\"/editDescription\",\"/submit_grade\").hasAnyRole(\"ADMIN\",\"STAFF\")\n                    .antMatchers(\"/Dashboard\",\"/StudentModule\",\"/grades\",\"/enrol\",\"/un_enrol\",\"/Payments\",\"/update_balance\").hasAnyRole(\"ADMIN\",\"STAFF\",\"STUDENT\")\n                    .antMatchers(\"/\",\"/Home\",\"**/Register\",\"**/resources/**\",\"**/save\",\"/Login\",\"/login_user\",\"/LoginFailed\",\"/blocked\").permitAll()\n                    .and()\n                .formLogin()\n                    .loginPage(\"/Login\")\n                    .usernameParameter(\"id\").passwordParameter(\"pwd\")\n                    .defaultSuccessUrl(\"/LoginSuccess\",true).failureUrl(\"/LoginFailed\")\n                    .failureForwardUrl(\"/LoginFailed\")\n                    .permitAll()\n                    .and()\n                .logout()\n                .logoutUrl(\"/logout\")\n                .deleteCookies(\"JSESSIONID\")\n                .clearAuthentication(true)\n                    .permitAll()\n                .and()\n                .requiresChannel().antMatchers(\"/*\").requiresSecure();\n\n        http.sessionManagement().maximumSessions(1).expiredUrl(\"/logout\");\n\n    }\n\n\n\n    @Bean\n    public PasswordEncoder passwordEncoder(){\n        return new BCryptPasswordEncoder();\n    }\n\n    @Bean\n    DaoAuthenticationProvider authenticationProvider(){\n        DaoAuthenticationProvider daoAuthenticationProvider = new DaoAuthenticationProvider();\n        daoAuthenticationProvider.setPasswordEncoder(passwordEncoder());\n        daoAuthenticationProvider.setUserDetailsService(userDetailsService);\n        return daoAuthenticationProvider;\n    }\n    //EXCEPTION HANDLERS\n    @ExceptionHandler(UserNotFoundException.class)\n    public String handleUserNotFound(UserNotFoundException ex, Model model){\n        return \"redirect:/LoginFailed\";\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/SSE2020/WannaTry/service/SecurityConfiguration.java	(revision 2cbb5b41a2967221fbc456dd0dcb761fab4053b0)
+++ src/main/java/com/SSE2020/WannaTry/service/SecurityConfiguration.java	(date 1589560951172)
@@ -45,7 +45,7 @@
                 .authorizeRequests()
                     .antMatchers("/editDescription","/submit_grade").hasAnyRole("ADMIN","STAFF")
                     .antMatchers("/Dashboard","/StudentModule","/grades","/enrol","/un_enrol","/Payments","/update_balance").hasAnyRole("ADMIN","STAFF","STUDENT")
-                    .antMatchers("/","/Home","**/Register","**/resources/**","**/save","/Login","/login_user","/LoginFailed","/blocked").permitAll()
+                    .antMatchers("/","/Home","/Register","**/resources/**","/save","/Login","/login_user","/LoginFailed","/blocked").permitAll()
                     .and()
                 .formLogin()
                     .loginPage("/Login")
Index: src/main/java/com/SSE2020/WannaTry/service/ExceptionHandlers.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/SSE2020/WannaTry/service/ExceptionHandlers.java	(date 1589563146093)
+++ src/main/java/com/SSE2020/WannaTry/service/ExceptionHandlers.java	(date 1589563146093)
@@ -0,0 +1,15 @@
+package com.SSE2020.WannaTry.service;
+
+import org.springframework.web.bind.annotation.ControllerAdvice;
+import org.springframework.web.bind.annotation.ExceptionHandler;
+
+import java.net.BindException;
+
+@ControllerAdvice
+public class ExceptionHandlers {
+    @ExceptionHandler(Exception.class)
+    public String handleNumberFormatException(Exception ne) {
+        // extract data from exception...
+        return "redirect:/Home";
+    }
+}
Index: src/main/java/com/SSE2020/WannaTry/controller/RegisterController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.SSE2020.WannaTry.controller;\n\nimport com.SSE2020.WannaTry.databaserepo.BlacklistRepository;\nimport com.SSE2020.WannaTry.model.CustomUserDetails;\nimport com.SSE2020.WannaTry.model.IP_Blacklist;\nimport com.SSE2020.WannaTry.model.Role;\nimport com.SSE2020.WannaTry.model.User;\nimport com.SSE2020.WannaTry.service.BackendRepoService;\nimport org.springframework.security.core.context.SecurityContextHolder;\nimport org.springframework.security.crypto.password.PasswordEncoder;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.ModelAttribute;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\n\nimport javax.servlet.http.HttpServletRequest;\nimport java.util.ArrayList;\nimport java.util.Optional;\n\n@Controller\npublic class RegisterController {\n\n    final\n    BackendRepoService repoService;\n    final\n    BlacklistRepository blacklistRepository;\n    final\n    PasswordEncoder passwordEncoder;\n\n    public RegisterController(BackendRepoService repoService, BlacklistRepository blacklistRepository, PasswordEncoder passwordEncoder) {\n        this.repoService = repoService;\n        this.blacklistRepository = blacklistRepository;\n        this.passwordEncoder = passwordEncoder;\n    }\n\n\n    @GetMapping(value=\"/Register\")\n    public String register(Model model, HttpServletRequest request){\n        String ip = request.getRemoteAddr();\n        if(isBlackListed(ip)){\n            return \"redirect:/blocked\";\n        }\n        Object context = SecurityContextHolder.getContext().getAuthentication().getPrincipal();\n        model.addAttribute(\"flag\", !(context instanceof CustomUserDetails));\n        User user = new User();\n        model.addAttribute(\"User\",user);\n        model.addAttribute(\"incorrectFormat\",\"correct\");\n        return \"Register\";\n    }\n    private boolean isBlackListed(String IP){\n        Optional<IP_Blacklist> blacklistedIP = blacklistRepository.findById(IP);\n        return blacklistedIP.map(ip_blacklist -> ip_blacklist.getIP_ADDRESS().equals(IP)).orElse(false);\n    }\n    @RequestMapping(value=\"/save\",method=RequestMethod.POST)\n    private String saveUser(@ModelAttribute(\"User\") User user){\n        ArrayList<Role> roles = new ArrayList<>();\n        Role role = repoService.getRoleRepository().findByName(\"ROLE_STUDENT\");\n        roles.add(role);\n        user.setRoles(roles);\n        user.setPassword(passwordEncoder.encode(user.getPassword()));\n        user.setID(repoService.getUserRepository().getRandomID());\n        repoService.getUserRepository().save(user);\n        return \"redirect:/Dashboard\";\n    }\n\n    // Delete a Note\n    @GetMapping(\"/unregister\")\n    public String deleteUser(HttpServletRequest request){\n        CustomUserDetails userDetails = (CustomUserDetails) SecurityContextHolder.getContext().getAuthentication().getPrincipal();\n        User user = userDetails.getUser();\n        repoService.getUserRepository().delete(user);\n        request.getSession().invalidate();\n        return \"redirect:/logout\";\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/SSE2020/WannaTry/controller/RegisterController.java	(revision 2cbb5b41a2967221fbc456dd0dcb761fab4053b0)
+++ src/main/java/com/SSE2020/WannaTry/controller/RegisterController.java	(date 1589560951179)
@@ -43,10 +43,13 @@
             return "redirect:/blocked";
         }
         Object context = SecurityContextHolder.getContext().getAuthentication().getPrincipal();
-        model.addAttribute("flag", !(context instanceof CustomUserDetails));
+
         User user = new User();
         model.addAttribute("User",user);
-        model.addAttribute("incorrectFormat","correct");
+        model.addAttribute("invalid",false);
+        model.addAttribute("isStaff",false);
+        model.addAttribute("isStudent",true);
+        model.addAttribute("flag", !(context instanceof CustomUserDetails));
         return "Register";
     }
     private boolean isBlackListed(String IP){
@@ -54,14 +57,24 @@
         return blacklistedIP.map(ip_blacklist -> ip_blacklist.getIP_ADDRESS().equals(IP)).orElse(false);
     }
     @RequestMapping(value="/save",method=RequestMethod.POST)
-    private String saveUser(@ModelAttribute("User") User user){
+    private String saveUser(@ModelAttribute("User") User newuser,Model model){
+        if(newuser == null){
+
+            User user = new User();
+            model.addAttribute("User",user);
+            model.addAttribute("invalid",true);
+            model.addAttribute("isStaff",false);
+            model.addAttribute("isStudent",false);
+            model.addAttribute("flag",true);
+            return "Register";
+        }
         ArrayList<Role> roles = new ArrayList<>();
         Role role = repoService.getRoleRepository().findByName("ROLE_STUDENT");
         roles.add(role);
-        user.setRoles(roles);
-        user.setPassword(passwordEncoder.encode(user.getPassword()));
-        user.setID(repoService.getUserRepository().getRandomID());
-        repoService.getUserRepository().save(user);
+        newuser.setRoles(roles);
+        newuser.setPassword(passwordEncoder.encode(newuser.getPassword()));
+        newuser.setID(repoService.getUserRepository().getRandomID());
+        repoService.getUserRepository().save(newuser);
         return "redirect:/Dashboard";
     }
 
Index: src/main/webapp/WEB-INF/view/StudentModule.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%--\n  Created by IntelliJ IDEA.\n  User: kiowa\n  Date: 16/02/2020\n  Time: 13:58\n  To change this template use File | Settings | File Templates.\n--%>\n<%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\n<%@ taglib prefix=\"form\" uri=\"http://www.springframework.org/tags/form\" %>\n<%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %>\n<html>\n<head>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"../../resources/css/Main.css\">\n    <title>Student Portal - Modules</title>\n</head>\n<body>\n  <%@include file=\"sidebar.jsp\"%>\n  <div class=\"main\">\n    <title-medium>My Modules</title-medium>\n    <div class=\"main-content\">\n      <c:forEach items=\"${modules}\" var=\"module\">\n        <div class=\"main-content\">\n            <sub-label><g>${module.module_id}</g></sub-label><br>\n            <sub-label><s-b>${module.module_name}</s-b></sub-label><br><br>\n            <sub-label><g>Module Description:</g></sub-label><br>\n            <sub-label>${module.description}</sub-label><br><br>\n            <sub-label><g>Module Duration:</g></sub-label><br>\n            <sub-label><sub-color>${module.start_date} to ${module.end_date}</sub-color></sub-label><br><br>\n            <form:form method=\"post\" action=\"un_enrol\" class=\"confirmation\">\n              <input  type=\"hidden\" id = \"student_unEnrol\" name = \"student\" value=\"${current_user.ID}\"/>\n              <input  type=\"hidden\" id = \"module_UnEnrol\" name = \"module\" value=\"${module.module_id}\"/>\n              <input type=\"submit\" value=\"Un-enrol / Drop\" onclick=\"return confirm('Are you sure you want to drop this module?')\" class=\"button-red\">\n            </form:form>\n          </div><br>\n      </c:forEach>\n    </div>\n  </div><br><br>\n\n  <div class=\"main\">\n    <title-medium>Available Modules</title-medium>\n    <div class=\"main-content\">\n      <c:forEach items=\"${available_modules}\" var=\"module\">\n        <div class=\"main-content\">\n            <sub-label><g>${module.module_id}</g></sub-label><br>\n            <sub-label><s-b>${module.module_name}</s-b></sub-label><br><br>\n            <sub-label><g>Module Description:</g></sub-label><br>\n            <sub-label>${module.description}</sub-label><br><br>\n            <sub-label><g>Module Duration:</g></sub-label><br>\n            <sub-label><sub-color>${module.start_date} to ${module.end_date}</sub-color></sub-label><br><br>\n            <form:form method=\"post\" action=\"enrol\"  class=\"confirmation\">\n                <input  type=\"hidden\" id = \"module\" name = \"module\" value=\"${module.module_id}\"/>\n                <input type=\"submit\" value=\"Enrol\" onclick=\"return confirm('Are you sure you want to enrol into this module?')\" class=\"button\">\n\n            </form:form>\n          </div><br>\n      </c:forEach>\n    </div>\n  </div>\n\n<div class=\"available\"></div>\n\n</body>\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/view/StudentModule.jsp	(revision 2cbb5b41a2967221fbc456dd0dcb761fab4053b0)
+++ src/main/webapp/WEB-INF/view/StudentModule.jsp	(date 1589563372355)
@@ -27,7 +27,6 @@
             <sub-label><g>Module Duration:</g></sub-label><br>
             <sub-label><sub-color>${module.start_date} to ${module.end_date}</sub-color></sub-label><br><br>
             <form:form method="post" action="un_enrol" class="confirmation">
-              <input  type="hidden" id = "student_unEnrol" name = "student" value="${current_user.ID}"/>
               <input  type="hidden" id = "module_UnEnrol" name = "module" value="${module.module_id}"/>
               <input type="submit" value="Un-enrol / Drop" onclick="return confirm('Are you sure you want to drop this module?')" class="button-red">
             </form:form>
Index: src/main/webapp/WEB-INF/view/Register.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@ taglib prefix=\"form\" uri=\"http://www.springframework.org/tags/form\" %>\n<%--\n  Created by IntelliJ IDEA.\n  User: kiowa\n  Date: 10/02/2020\n  Time: 18:53\n  To change this template use File | Settings | File Templates.\n--%>\n<%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %>\n<html>\n<head>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"../../resources/css/Main.css\">\n    <title>Registration Page</title>\n</head>\n<body>\n\n<%@include file=\"sidebar.jsp\" %>\n<div class=\"form-container\">\n    <c:if test=\"${incorrectFormat==correct}\">\n        <error-text>Please ensure that you enter the correct values when registering!</error-text>\n    </c:if>\n    <title-medium>User Registration</title-medium>\n    <form:form method=\"post\" action=\"save\" modelAttribute=\"User\" name=\"RegisterForm\" class='main-content'>\n        <form:input path=\"FName\" class='input-box' placeholder='First Name' required=\"required\" pattern=\"[A-Za-z]+\" title=\"Please enter your first name\"/><br><br>\n        <form:input path=\"LName\" class='input-box' placeholder='Surname' required=\"required\" pattern=\"[A-Za-z]+\" title=\"Please enter your surname\"/><br><br>\n        <form:input path=\"email\" class='input-box' placeholder='Email Address' type=\"email\" required=\"required\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\" title=\"Please enter your email\"/><br><br>\n        <sub-label>Password must be at least <g>8</g> characters, containing at least <g>1</g> number, at least <g>1</g> upper <g>AND</g> lowercase letter</sub-label><br><br>\n        <form:input path=\"password\" class='input-box' placeholder='Password' type=\"password\" required=\"required\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" title=\"Password must meet the requirements\"/><br><br>\n        <form:input path=\"address\" class='input-box' placeholder='Address' required=\"required\" pattern=\"[a-zA-Z0-9 ]+\" title=\"Please enter your address\"/><br><br>\n        <sub-label>Must be in format <g>YEAR-MONTH-DATE</g> <i>e.g. 25th December 2020 -> <g>2020-12-25</g></i></sub-label><br><br>\n        <form:input path=\"DOB\" class='input-box' placeholder='Date of Birth' required=\"required\" pattern=\"^(19|20)\\d\\d[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$\" title=\"Please use the required format\"/><br><br>\n        <form:input path=\"phoneNumber\" class='input-box' placeholder='Phone Number' type=\"number\" required=\"required\" pattern=\"{,20}\" title=\"Please enter your phone number\"/><br><br>\n        <sub-label>Select Ethnicity</sub-label><br><br>\n        <form:select path=\"ethnicity\" class='input-box' placeholder='Ethnicity'>\n            <form:option value=\"White\">White</form:option>\n            <form:option value=\"Black or African American\">Black</form:option>\n            <form:option value=\"American Indian or Alaska Native\">Native American</form:option>\n            <form:option value=\"Asian\">Asian</form:option>\n            <form:option value=\"African\">African</form:option>\n        </form:select><br><br>\n        <sub-label>Select Gender</sub-label><br><br>\n        <form:select path=\"gender\" class='input-box' placeholder='Gender' >\n            <form:option value=\"M\">Male</form:option>\n            <form:option value=\"F\">Female</form:option>\n            <form:option value=\"O\">Other</form:option>\n        </form:select><br><br>\n        <input type=\"submit\" class='button' value=\"Submit\">\n    </form:form>\n</div>\n</body>\n</html>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/view/Register.jsp	(revision 2cbb5b41a2967221fbc456dd0dcb761fab4053b0)
+++ src/main/webapp/WEB-INF/view/Register.jsp	(date 1589560979680)
@@ -16,7 +16,7 @@
 
 <%@include file="sidebar.jsp" %>
 <div class="form-container">
-    <c:if test="${incorrectFormat==correct}">
+    <c:if test="${invalid}">
         <error-text>Please ensure that you enter the correct values when registering!</error-text>
     </c:if>
     <title-medium>User Registration</title-medium>
